[user]
    name = "Mateusz Cygert"
    email = "matcyg@gmail.com"
[http]
    sslVerify = false
[push]
    default = current
[core]
    trustctime = false
	editor = subl -n -w
    filemode = false
    excludesfile = ~/.gitignore_global
    pager = less -F -X
	autocrlf = input
[color]
    ui = true
[credential]
    helper = cache --timeout=1
[merge]
    tool = vimdiff
[mergetool]
    keeptemporaries = false
    keepbackups = false
    prompt = false
    trustexitcode = false
[alias]
    # basic aliases
    cp = cherry-pick
    co = checkout
    cl = clone
    cls = clone --depth 1
    clf-old = "!f() { GIT_SSH_COMMAND='ssh -i ~/.ssh/id_ed25519'; git clone --config core.sshCommand=\"$GIT_SSH_COMMAND\" \"$@\"; }; f"
    clf = clone --config core.sshCommand='ssh -i ~/.ssh/id_ed25519'
    cfgf = config core.sshCommand 'ssh -i ~/.ssh/id_ed25519'
    ci = commit
    cia = commit -a --amend -C HEAD
    st = status -sb
    stu = status -sbu
    lu = ls-files --others --exclude-standard
    b = branch
    # Get current branch name
    bn = symbolic-ref --short HEAD
    unstage = reset HEAD --

    # checkout remote branch with fzf
    cor = !git checkout -t $(git branch -r | fzf)
    # checkout local branch with fzf
    col = !git checkout $(git branch | fzf)
    # Undo last commit
    undocommit=reset --soft HEAD~
    # add interactive
    ai=add -i
    aa=add .
    as=!git add . && git stash
    ac=!git add . && git commit -m
    # completly reset branch
    fresh = !git add . && git reset --hard @
    # execute real diff
    rd = !$PROJECTS/personal/dotfiles/git-real-diff.sh
    rdi = !$PROJECTS/personal/dotfiles/git-real-diff.sh && idea ./
    clean-branches = !$PROJECTS/personal/dotfiles/git-cleanup-other-branches.sh
    clearlocalbranches = remote prune origin
    fco = "! bn=${1:-develop}; git fresh && git checkout $bn && git pull #"
    fcor = "! git fco && git rdi #"

    # stash operation
    sl = !git --no-pager stash list
    sa = stash apply
    sp = stash pop
    o = "!bash -c 'source $DOTFILES/zsh/aliases.sh && git-open-url'"
    op = "!bash -c 'source $DOTFILES/zsh/aliases.sh && git-open-pipelines'"

    # List all aliases
    la = !git config -l | grep --color=auto alias | cut -c 7-
    # search codebase for a string (add -l to only list files containing the string)
    searchcodebase = grep --color=auto -Ii
    # Search for a file in repo - combine it with fl!
    f = !git ls-files | grep --color=auto -i
    dc=diff --cached

    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lsn = !git --no-pager ls -n 10
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative

[status]
    showUntrackedFiles = no
